// SPDX-License-Identifier: BSD-3-Clause
/*
 * Copyright (c) 2020, Konrad Dybcio
 */

/dts-v1/;

#include "sdm630.dtsi"
#include "pm660.dtsi"
#include "pm660l.dtsi"
#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/input/input.h>
#include <dt-bindings/input/gpio-keys.h>

#define EARLY_FRAMEBUFFER

/ {
	/* required for bootloader to select correct board */
	qcom,msm-id = <318 0>;
	qcom,board-id = <8 1>;
	qcom,pmic-id = <0x1001b 0x101011a 0x00 0x00 0x1001b 0x201011a 0x00 0x00>;

	/* This part enables graphical output via bootloader-enabled display */
	chosen {
#ifdef EARLY_FRAMEBUFFER
		bootargs = "earlycon=tty0 console=tty0 clk_ignore_unused";
#else
		bootargs = "clk_ignore_unused";
#endif
		#address-cells = <2>;
		#size-cells = <2>;
		ranges;

#ifdef EARLY_FRAMEBUFFER
		stdout-path = "framebuffer0";


		framebuffer0: framebuffer@9d400000 {
			compatible = "simple-framebuffer";
			reg = <0 0x9d400000 0 (1920 * 1080 * 4)>;
			width = <1080>;
			height = <1920>;
			stride = <(1080 * 4)>;
			format = "a8r8g8b8";

			power-domains = <&mmcc MDSS_GDSC>;
			clocks = <&mmcc MDSS_AHB_CLK>,
				 <&mmcc MNOC_AHB_CLK>,
				 <&mmcc MDSS_VSYNC_CLK>,
				 <&mmcc MDSS_AXI_CLK>,
				 <&mmcc MDSS_BYTE0_INTF_CLK>,
				 <&mmcc MDSS_MDP_CLK>,
				 <&mmcc MDSS_BYTE0_CLK>,
				 <&mmcc MDSS_PCLK0_CLK>,
				 <&mmcc MDSS_ESC0_CLK>,
				 <&xo_board>;
		};
#endif
	};

	board_vbat: vbat-regulator {
		compatible = "regulator-fixed";
		regulator-name = "VBAT";

		regulator-min-microvolt = <4000000>;
		regulator-max-microvolt = <4000000>;
		regulator-always-on;
		regulator-boot-on;
	};

	vph_pwr: vph-pwr-regulator {
		compatible = "regulator-fixed";
		regulator-name = "vph_pwr";

		vin-supply = <&board_vbat>;
		regulator-always-on;
		regulator-boot-on;
	};

	gpio_keys: gpio_keys {
		status = "okay";
		compatible = "gpio-keys";
		input-name = "gpio-keys";
		#address-cells = <1>;
		#size-cells = <0>;

		camera_focus {
			label = "Camera Focus";
			gpios = <&tlmm 64 GPIO_ACTIVE_LOW>;
			linux,input-type = <1>;
			linux,code = <KEY_CAMERA_FOCUS>;
			debounce-interval = <15>;
		};

		camera_snapshot {
			label = "Camera Snapshot";
			gpios = <&tlmm 113 GPIO_ACTIVE_LOW>;
			linux,input-type = <1>;
			linux,code = <KEY_CAMERA>;
			debounce-interval = <15>;
		};

		vol_down {
			label = "Volume Down";
			gpios = <&pm660l_gpios 7 GPIO_ACTIVE_LOW>;
			linux,input-type = <1>;
			linux,code = <KEY_VOLUMEDOWN>;
			gpio-key,wakeup;
			debounce-interval = <15>;
		};
	};

	reserved-memory {
		#address-cells = <2>;
		#size-cells = <2>;
		ranges;

		ramoops@ffc00000 {
			compatible = "ramoops";
			reg = <0x0 0xffc00000 0x0 0x100000>;
			record-size = <0x10000>;
			console-size = <0x60000>;
			ftrace-size = <0x10000>;
			pmsg-size = <0x20000>;
			ecc-size = <16>;
			status = "okay";
		};

		debug_region@ffb00000 {
			reg = <0x00 0xffb00000 0x00 0x100000>;
			no-map;
		};

		removed_region@85800000 {
			reg = <0x00 0x85800000 0x00 0x3700000>;
			no-map;
		};
	};

	/* This is not exactly pretty, but required for TS to work.. */

	i2c1_touch: i2c {
		compatible = "i2c-gpio";
		status = "okay";

		sda-gpios = <&tlmm 2 (GPIO_ACTIVE_HIGH|GPIO_OPEN_DRAIN)>;
		scl-gpios = <&tlmm 3 (GPIO_ACTIVE_HIGH|GPIO_OPEN_DRAIN)>;

		#address-cells = <1>;
		#size-cells = <0>;
		clock-frequency = <400000>;

		pinctrl-names = "default";
		pinctrl-0 = <&i2c1_default>;

		touchscreen: synaptics-rmi4-i2c@70 {
			compatible = "syna,rmi4-i2c";
			reg = <0x70>;
			#address-cells = <1>;
			#size-cells = <0>;
			interrupts-extended = <&tlmm 45 0x2008>;

			pinctrl-names = "default";
			pinctrl-0 = <&ts_int_active &ts_lcd_id_active>;

			syna,reset-delay-ms = <200>;
			syna,startup-delay-ms = <220>;

			rmi4-f01@1 {
				reg = <0x01>;
				syna,nosleep-mode = <1>;
			};

			rmi4-f11@11 {
				reg = <0x11>;
				syna,sensor-type = <1>;
			};
		};
	};

	/* 
	 * Until we hook up type-c detection, we
	 * have to stick with this. But it works.
	 */
	extcon_usb: extcon-usb {
		compatible = "linux,extcon-usb-gpio";
		id-gpio = <&tlmm 58 GPIO_ACTIVE_HIGH>;
	};
};

&adsp_pil {
	firmware-name = "adsp.mdt";
	status = "disabled";
};

&blsp_i2c1 {
	status = "okay";

	/* Synaptics touchscreen - see above */
};

&blsp_i2c2 {
	status = "okay";

	/* SMB1351 charger */
};

/* I2C3, 4, 5, 7 and 8 are disabled on this board. */

&blsp_i2c6 {
	status = "okay";

	/* NXP NFC */
};

&blsp1_uart2 {
	status = "okay";
};

&blsp2_uart1 {
	status = "okay";
};

&dsi0 {
	#address-cells = <1>;
	#size-cells = <0>;

	power-domains = <&mmcc MDSS_GDSC>;
	vdd-supply = <&vreg_l1b_0p925>;
	vdda-supply = <&vreg_l1a_1p225>;

	panel: panel@0 {
		reg = <0>;

		reset-gpios = <&tlmm 53 GPIO_ACTIVE_HIGH>;
		disp-te-gpios = <&tlmm 59 GPIO_ACTIVE_HIGH>;

		pinctrl-names = "default";
		pinctrl-0 = <&panel_reset_gpio &panel_te_gpio>;
		port {
			panel_in: endpoint {
				remote-endpoint = <&dsi0_out>;
			};
		};
	};
};

&dsi0_out {
	remote-endpoint = <&panel_in>;
	data-lanes = <0 1 2 3>;
};

&mdss {
	status = "okay";
};

&pon {
	volup {
		compatible = "qcom,pm8941-resin";
		interrupts = <0x0 0x8 1 IRQ_TYPE_EDGE_BOTH>;
		debounce = <15625>;
		bias-pull-up;
		linux,code = <KEY_VOLUMEUP>;
	};
};

&q6asmdai {
	dai@0 {
		reg = <0>;
	};

	dai@1 {
		reg = <1>;
	};
};

&qusb2phy {
	status = "okay";

	vdd-supply = <&vreg_l1b_0p925>;
	vdda-pll-supply = <&vreg_l10a_1p8>;
	vdda-phy-dpdm-supply = <&vreg_l7b_3p125>;
};

&remoteproc_mss {
	firmware-name = "mba.mbn", "modem.mdt";
};

&sdhc_1 {
	status = "okay";

	mmc-ddr-1_8v;
	/* SoMC Nile platform's eMMC doesn't support HS200 mode */
	mmc-hs400-1_8v;

	/*
	 * The SDHCI driver REALLY doesn't like
	 * the fact that the vmmc regulator isn't 1.8V
	 * flat.. but the eMMC works without regulators
	 * specified.
	 */
	 vmmc-supply = <&vreg_l4b_29p5>;
	 vqmmc-supply = <&vreg_l8a_1p8>;
	 
};

&sdhc_2 {
	status = "okay";

	vmmc-supply = <&vreg_l5b_29p5>;
	vqmmc-supply = <&vreg_l2b_2p95>; 
};

&wifi {
	status = "okay";
	vdd-0.8-cx-mx-supply = <&vreg_l5a_0p848>;
	vdd-1.8-xo-supply = <&vreg_l9a_1p8>;
	vdd-1.3-rfa-supply = <&vreg_l6a_1p3>;
	vdd-3.3-ch0-supply = <&vreg_l19a_3p3>;
};

/*
    s3                            0    0      0  normal   908mV     0mA     0mV     0mV
    s4                            0    0      0  normal   908mV     0mA     0mV     0mV
    s5                            0    0      0  normal   920mV     0mA     0mV     0mV
*/

&pm660l_spmi_regulators {
/*
	vdd_cx: s3 {
		regulator-min-microvolt = <870000>;
		regulator-max-microvolt = <955000>;
		//regulator-boot-on;
	};

	vdd_mx: s5 {
		regulator-min-microvolt = <915000>;
		regulator-max-microvolt = <955000>;
	///	regulator-boot-on;
	};
*/
};

&rpm_requests {
	pm660l-regulators {
		compatible = "qcom,rpm-pm660l-regulators";

		vdd_s1-supply = <&vph_pwr>;
		vdd_s2-supply = <&vph_pwr>;
		vdd_s3_s4-supply = <&vph_pwr>;
		vdd_s5-supply = <&vph_pwr>;
		vdd_s6-supply = <&vph_pwr>;

		vdd_l1_l9_l10-supply = <&vreg_s2b_1p05>;
		vdd_l2-supply = <&vreg_bob>;
		vdd_l3_l5_l7_l8-supply = <&vreg_bob>;
		vdd_l4_l6-supply = <&vreg_bob>;
		vdd_bob-supply = <&vph_pwr>;

		vreg_s1b_1p125: s1b {
			regulator-min-microvolt = <1125000>;
			regulator-max-microvolt = <1125000>;
		};

		vreg_s2b_1p05: s2b {
			regulator-min-microvolt = <1050000>;
			regulator-max-microvolt = <1050000>;
		};

#if 0
		vreg_s3b_s4b_0p87: s3b { /* VDD_CX */
			//regulator-min-microvolt = <355000>;
			/* HACK: Set it to at least 0.870V until we can scale it */

			regulator-min-microvolt = <870000>;
			regulator-max-microvolt = <955000>;
//			regulator-boot-on;

//			status = "disabled";
		};

		/* s4b is inaccessible / doesn't exist */

		vreg_s5b_0p915: s5b { /* VDD_MX */
			//regulator-min-microvolt = <525000>;
			/* HACK: Set it to at least 0.915V until we can scale it */

			regulator-min-microvolt = <915000>;
			regulator-max-microvolt = <955000>;
//			regulator-boot-on;

//			status = "disabled";
		};
#endif

		/* LDOs */
		vreg_l1b_0p925: l1b {
			regulator-min-microvolt = <880000>;
			regulator-max-microvolt = <928000>;
			regulator-allow-set-load;
		};

		vreg_l2b_2p95: l2b {
			/* This regulator supports 1.648 - 3.104V on this board
			 * but we set a max voltage of anything less than 2.7V
			 * to satisfy a condition in sdhci.c that will disable
			 * 3.3V SDHCI signaling, which happens to be not really
			 * supported on the Xperia Nile/Ganges platform.
			 */
			regulator-min-microvolt = <1648000>;
			regulator-max-microvolt = <2696000>;
			/* regulator-max-microvolt = <3104000>; */
			regulator-allow-set-load;
		};

		vreg_l3b_3p0: l3b {
			regulator-min-microvolt = <1710000>;
			regulator-max-microvolt = <3544000>;
		};

		vreg_l4b_29p5: l4b {
			regulator-min-microvolt = <1700000>;
			regulator-max-microvolt = <2952000>;
		//	regulator-allow-set-load;
		};

		vreg_l5b_29p5: l5b {
			regulator-min-microvolt = <1720000>;
			regulator-max-microvolt = <3600000>;
			regulator-allow-set-load;
		};

		vreg_l6b_3p3: l6b {
			regulator-min-microvolt = <1704000>;
			regulator-max-microvolt = <3312000>;
		};

		vreg_l7b_3p125: l7b {
			regulator-min-microvolt = <2704000>;
			regulator-max-microvolt = <3128000>;
		};

		vreg_l8b_3p3: l8b {
			regulator-min-microvolt = <2800000>;
			regulator-max-microvolt = <3400000>;
		};

		vreg_l9b_0p87: l9b {
			/* Unused */
			status = "disabled";
		};

		vreg_l10b_0p915: l10b {
			/* Unused */
			status = "disabled";
		};

		vreg_bob: bob {
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3600000>;
		};
	};

	pm660-regulators {
		compatible = "qcom,rpm-pm660-regulators";

		vdd_s1-supply = <&vph_pwr>;
		vdd_s2-supply = <&vph_pwr>;
		vdd_s3-supply = <&vph_pwr>;
		vdd_s4-supply = <&vph_pwr>;
		vdd_s5-supply = <&vph_pwr>;
		vdd_s6-supply = <&vph_pwr>;

		vdd_l1_l6_l7-supply = <&vreg_s5a_1p35>;
		vdd_l2_l3-supply = <&vreg_s2b_1p05>;
		vdd_l5-supply = <&vreg_s2b_1p05>;
		vdd_l8_l9_l10_l11_l12_l13_l14-supply = <&vreg_s4a_2p04>;
		vdd_l15_l16_l17_l18_l19-supply = <&vreg_bob>;

		vreg_s1a_ftapc0: s1a {
			/* Unused */
			status = "disabled";
		};

		vreg_s2a_ftapc1: s2a {
			/* Unused */
			status = "disabled";
		};

		vreg_s3a_hfapc1: s3a {
			/* Unused */
			status = "disabled";
		};

		vreg_s4a_2p04: s4a {
			regulator-min-microvolt = <1805000>;
			regulator-max-microvolt = <2040000>;
			regulator-allow-set-load;
		};

		vreg_s5a_1p35: s5a {
			regulator-min-microvolt = <1224000>;
			regulator-max-microvolt = <1350000>;
		};

		vreg_s6a_0p87: s6a {
			regulator-min-microvolt = <504000>;
			regulator-max-microvolt = <992000>;
		};

		/* LDOs */
		vreg_l1a_1p225: l1a {
			//regulator-min-microvolt = <1152000>;
			regulator-min-microvolt = <1200000>;
			regulator-max-microvolt = <1250000>;
			regulator-allow-set-load;
		};

		vreg_l2a_1p0: l2a {
			regulator-min-microvolt = <944000>;
			regulator-max-microvolt = <1008000>;
		};

		vreg_l3a_1p0: l3a {
			regulator-min-microvolt = <944000>;
			regulator-max-microvolt = <1008000>;
		};

		vreg_l5a_0p848: l5a {
			regulator-min-microvolt = <528000>;
			regulator-max-microvolt = <952000>;
		};

		vreg_l6a_1p3: l6a {
			regulator-min-microvolt = <1200000>;
			regulator-max-microvolt = <1368000>;
			regulator-allow-set-load;
		};

		vreg_l7a_1p2: l7a {
			regulator-min-microvolt = <1200000>;
			regulator-max-microvolt = <1200000>;
		};

		vreg_l8a_1p8: l8a {
			regulator-min-microvolt = <1696000>;
			regulator-max-microvolt = <1952000>;
		};

		vreg_l9a_1p8: l9a {
			regulator-min-microvolt = <1784000>;
			regulator-max-microvolt = <1896000>;
			regulator-allow-set-load;
		};

		vreg_l10a_1p8: l10a {
			regulator-min-microvolt = <1784000>;
			regulator-max-microvolt = <1944000>;
			regulator-allow-set-load;
		};

		vreg_l11a_1p8: l11a {
			regulator-min-microvolt = <1784000>;
			regulator-max-microvolt = <1944000>;
		};

		vreg_l12a_1p8: l12a {
			regulator-min-microvolt = <1784000>;
			regulator-max-microvolt = <1944000>;
		};

		vreg_l13a_1p8: l13a {
			regulator-min-microvolt = <1784000>;
			regulator-max-microvolt = <1944000>;
		};

		vreg_l14a_1p8: l14a {
			regulator-min-microvolt = <1710000>;
			regulator-max-microvolt = <1904000>;
		};

		vreg_l15a_1p8: l15a {
			regulator-min-microvolt = <1648000>;
			regulator-max-microvolt = <2952000>;
		};

		vreg_l16a_2p7: l16a {
			/* Unused */
			status = "disabled";
		};

		vreg_l17a_1p8: l17a {
			regulator-min-microvolt = <1648000>;
			regulator-max-microvolt = <2952000>;
		};

		vreg_l18a_1v8: l18a {
			regulator-min-microvolt = <1800000>;
			regulator-max-microvolt = <1800000>;
		};

		vreg_l19a_3p3: l19a {
			regulator-min-microvolt = <3200000>;
			regulator-max-microvolt = <3400000>;
			regulator-allow-set-load;
		};
	};
};

&tlmm {
	gpio-reserved-ranges = <8 4>;

	ts_int_active: ts-int-active {
		pins = "gpio45";
		drive-strength = <8>;
		bias-pull-up;
	};

	ts_lcd_id_active: ts-lcd-id-active {
		pins = "gpio56";
		drive-strength = <8>;
		bias-disable;
	};

	panel_reset_gpio: panel-reset-gpio {
		pins = "gpio53";
		function = "gpio";
		drive-strength = <8>;
		bias-disable;
	};

	mdss_dsi_suspend: mdss-dsi-suspend {
		pins = "gpio53";
		function = "gpio";
		drive-strength = <2>;
		bias-pull-down;
	};

	panel_te_gpio: panel-te-gpio {
		pins = "gpio59";
		function = "gpio";
		drive-strength = <2>;
		bias-pull-down;
	};
};

&usb3 {
	status = "okay";
};

&usb3_dwc3 {
	dr_mode = "peripheral";
	extcon = <&extcon_usb>;
};


&adreno_smmu {
	/* HACK: GX GDSC parent is CX. We need to bring up CX for SMMU
	 *       but we need both up for Adreno. On the other hand, we
	 *       need to manage the GX rpmpd domain in the adreno driver.
	 *       Enable CX/GX GDSCs here so that we can manage the GX
	 *       RPM Power Domain in the Adreno driver.
	 */
	power-domains = <&gpucc GPU_GX_GDSC>;
};

&adreno_gpu {
	power-domains = <&rpmpd SDM660_VDDMX>;

	status = "disabled";
};
